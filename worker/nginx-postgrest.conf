# this strips the /rest/v1 which the supabase client puts on the calls to postgrest.

server {
    listen 5431;
    server_name _;
    error_log  /dev/stderr warn;
    access_log  /dev/stdout;

    location /rest/v1/ {
        proxy_pass http://localhost:5430/;
        # Strip /rest/v1 from path
        rewrite ^/rest/v1/(.*)$ /$1 break;
    }
    location /helicone_test/rest/v1/ {
        proxy_pass http://localhost:5430/;
        # Strip /helicone_test/rest/v1 from path
        rewrite ^/helicone_test/rest/v1/(.*)$ /$1 break;
    }
}

# proxy server for open-webui to insert a helicone header which will then cause
# helicone to direct traffic to my local ollama server (open-ai compatible api)
#
# open-webui to 192.168.100.86:8786 -> (insert header) -> localhost:8787 

server {
    listen 8786;
    server_name _;
    client_max_body_size 100M;

    error_log  /dev/stderr warn;
    access_log  /dev/stdout;

    location / {
        proxy_pass http://localhost:8787/;
        proxy_set_header Helicone-Target-URL "http://192.168.100.86:11434/v1";
        proxy_set_header Helicone-User-Id $http_x_openwebui_user_email;

        # Remove the original OpenWebui user-info headers
        proxy_set_header X-OpenWebUI-User-Email "";
        proxy_set_header X-OpenWebUI-User-Name "";
        proxy_set_header X-OpenWebUI-User-Id "";
        proxy_set_header X-OpenWebUI-User-Role "";

    }
}
