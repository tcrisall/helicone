[supervisord]
nodaemon=true
user=root
logfile=/var/log/supervisor/supervisord.log
pidfile=/var/run/supervisord.pid
environment=DATABASE_URL="postgresql://postgres:password@localhost:5432/helicone_test"

# Note that all these services run internally, and thus actually use the internal ports.
# This is why we specify CLICKHOUSE_HOST in the docker-compose.yml file.
# Additionally, the ports for MinIO are different from the default 9000, since it conflicts with Clickhouse.

# TODO: add a better way to load env vars from file

[unix_http_server]
file=/var/run/supervisor.sock
chmod=0700

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock

[program:postgresql]
command=/usr/lib/postgresql/17/bin/postgres -D /var/lib/postgresql/17/main -c config_file=/etc/postgresql/17/main/postgresql.conf
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/postgresql.err.log
stdout_logfile=/var/log/supervisor/postgresql.out.log
user=postgres

[program:clickhouse]
command=/usr/bin/clickhouse-server --config-file=/etc/clickhouse-server/config.xml
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/clickhouse.err.log
stdout_logfile=/var/log/supervisor/clickhouse.out.log
user=clickhouse

[program:jawn]
command=yarn start
directory=/app/valhalla/jawn
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/jawn.err.log
stdout_logfile=/var/log/supervisor/jawn.out.log
user=root
environment=S3_ACCESS_KEY="minioadmin",S3_SECRET_KEY="minioadmin",S3_ENDPOINT="http://localhost:9080",S3_BUCKET_NAME="request-response-storage",S3_ENABLED="true",KAFKA_CREDS='{"KAFKA_ENABLED": "false", "UPSTASH_KAFKA_BROKER": "localhost:9092", "UPSTASH_KAFKA_URL": "http://localhost:9092", "LOCAL_KAFKA": true}',OPENROUTER_WORKER_URL="http://localhost:8788",OPENAI_API_KEY="sk-...",OPENROUTER_API_KEY="sk-....",PROVIDER_KEYS='{ "DEMO_OPENAI_API_KEY": "sk-..." }',CSB_API_KEY="sk-...",TOGETHER_API_KEY="sk-...",STRIPE_SECRET_KEY="sk_dummy_key_12345678901234567890123456789012345678901234567890",NEXT_PUBLIC_BETTER_AUTH="true",BETTER_AUTH_SECRET="MKUcaeqyMD7UBkGeFYY5hwxKS1aB6Vsi",SUPABASE_DATABASE_URL="postgresql://postgres:password@localhost:5432/helicone_test",HELICONE_WORKER_URL="http://localhost:8585/v1/gateway/oai"

[program:web]
command=yarn start
directory=/app/web
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/web.err.log
stdout_logfile=/var/log/supervisor/web.out.log
user=root
environment=VERCEL="1",VERCEL_ENV="development",NEXT_PUBLIC_SLACK_CLIENT_ID="1234567890",SLACK_CLIENT_SECRET="1234567890",NEXT_PUBLIC_BASE_PATH="https://192.168.100.86:3100",NEXT_PUBLIC_HELICONE_JAWN_SERVICE="http://192.168.100.86:8585",DATABASE_URL="postgresql://postgres:password@localhost:5432/helicone_test",BETTER_AUTH_SECRET="MKUcaeqyMD7UBkGeFYY5hwxKS1aB6Vsi",NEXT_PUBLIC_BETTER_AUTH="true"

[program:flyway-migrate]
command=/bin/bash -c "until pg_isready -U postgres; do echo 'Waiting for PostgreSQL...'; sleep 2; done && flyway migrate"
autostart=true
autorestart=false
startsecs=0
startretries=3
stderr_logfile=/var/log/supervisor/flyway-migrate.err.log
stdout_logfile=/var/log/supervisor/flyway-migrate.out.log

[program:clickhouse-migrate]
command=/bin/bash -c "until curl -s http://localhost:8123/ping > /dev/null; do echo 'Waiting for ClickHouse...'; sleep 2; done && python3 /app/clickhouse/ch_hcone.py --upgrade --no-password --host localhost --port 8123"
autostart=true
autorestart=false
startsecs=0
startretries=3
stderr_logfile=/var/log/supervisor/clickhouse-migrate.err.log
stdout_logfile=/var/log/supervisor/clickhouse-migrate.out.log

[program:minio]
command=/usr/local/bin/minio server /data --address ":9080" --console-address ":9001"
autostart=true
autorestart=true
stderr_logfile=/var/log/supervisor/minio.err.log
stdout_logfile=/var/log/supervisor/minio.out.log
user=root
environment=MINIO_ROOT_USER="minioadmin",MINIO_ROOT_PASSWORD="minioadmin"

[program:minio-setup]
command=/bin/sh -c "until curl -f http://localhost:9080/minio/health/live > /dev/null 2>&1; do echo 'Waiting for MinIO...'; sleep 2; done && /usr/local/bin/mc alias set localminio http://localhost:9080 minioadmin minioadmin && /usr/local/bin/mc mb --ignore-existing localminio/request-response-storage && exit 0"
autostart=true
autorestart=false
startsecs=0
startretries=3
stderr_logfile=/var/log/supervisor/minio-setup.err.log
stdout_logfile=/var/log/supervisor/minio-setup.out.log
environment=MINIO_ROOT_USER="minioadmin",MINIO_ROOT_PASSWORD="minioadmin"

[program:worker]
command=/worker/worker-start.sh
autostart=true
autorestart=false
startsecs=0
startretries=3
stderr_logfile=/var/log/supervisor/worker.err.log
stdout_logfile=/var/log/supervisor/worker.out.log
environment=VALHALLA_URL="http://localhost:8585",SUPABASE_URL="http://postgres:password@localhost:5431/helicone_test",SUPABASE_SERVICE_ROLE_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoicG9zdGdyZXMiLCJpc3MiOiJzdXBhYmFzZSIsImV4cCI6NDEwMjQ0NDgwMH0.5T74-W1nWBBg1BeKKVFQbj4yFuiDyPv1ZbseAerjpPI",S3_ACCESS_KEY="minioadmin",S3_SECRET_KEY="minioadmin",S3_ENDPOINT="http://localhost:9080",S3_BUCKET_NAME="request-response-storage",S3_ENABLED="true"

[program:postgrest]
command=/worker/postgrest-start.sh
autostart=true
autorestart=false
startsecs=0
startretries=3
stderr_logfile=/var/log/supervisor/postgrest.err.log
stdout_logfile=/var/log/supervisor/postgrest.out.log
environment=PGRST_DB_URI="postgresql://postgres:password@localhost:5432/helicone_test",PGRST_DB_SCHEMA="public",PGRST_DB_ANON_ROLE="postgres",PGRST_SERVER_PORT="5430",PGRST_JWT_SECRET="Ah6j2uYPLr4bN9cXpZq7Wt5vM1KsB8Qw"

[program:nginx]
command=/usr/sbin/nginx -g "daemon off;"
autostart=true
autorestart=false
startsecs=0
startretries=3
stderr_logfile=/var/log/supervisor/nginx.err.log
stdout_logfile=/var/log/supervisor/nginx.out.log
environment=

